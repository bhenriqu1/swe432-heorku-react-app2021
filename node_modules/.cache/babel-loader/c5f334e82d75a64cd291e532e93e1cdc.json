{"ast":null,"code":"import axios from \"axios\"; // popcornA.js\n//  Ajax JavaScript code for the popcornA.html document\n//  Thanks to Sebesta, Programming the World Wide Web\n\n/********************************************************/\n// function getPlaceAjax\n//  parameter: zip\n//  parameter: success callback\n//  parameter: error callback (optional)\n//  parameter: url (optional)\n//  action: create the XMLHttpRequest object, register the\n//          handler for onreadystatechange, prepare to send\n//          the request (with open), and send the request,\n//          along with the zip code, to the server\n//  includes: the anonymous handler for onreadystatechange\n\nfunction getPlaceAjax(url, zip, thenCallback, catchCallback) {\n  let xhr = null;\n\n  if (window.XMLHttpRequest) {\n    // IE7+, Firefox, Chrome, Opera, Safari\n    xhr = new XMLHttpRequest();\n  } else {\n    // IE5, IE6\n    // eslint-disable-next-line\n    xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n  } // Register the embedded handler function\n  // This function will be called when the server returns\n  // (the \"callback\" function)\n\n\n  xhr.onreadystatechange = () => {\n    // 4 means finished,\n    if (xhr.readyState === 4) {\n      // and 200 means okay.\n      if (xhr.status === 200) {\n        // Data should look like \"Fairfax, Virginia\"\n        thenCallback(JSON.parse(xhr.responseText));\n      } else {\n        catchCallback(xhr.statusText, xhr);\n      }\n    }\n  }; // Call the response software component\n\n\n  const query = url + \"?zip=\" + zip;\n  xhr.open(\"GET\", query);\n  xhr.send(null);\n}\n\nfunction getPlaceAjaxPromise(url, zip, thenCallback, catchCallback) {\n  const zipPromise = new Promise((resolutionFunc, rejectionFunc) => {\n    let xhr = null;\n\n    if (window.XMLHttpRequest) {\n      // IE7+, Firefox, Chrome, Opera, Safari\n      xhr = new XMLHttpRequest();\n    } else {\n      // IE5, IE6\n      // eslint-disable-next-line\n      xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    } // Register the embedded handler function\n    // This function will be called when the server returns\n    // (the \"callback\" function)\n\n\n    xhr.onreadystatechange = () => {\n      // 4 means finished,\n      if (xhr.readyState === 4) {\n        // and 200 means okay.\n        if (xhr.status === 200) {\n          // Data should look like \"Fairfax, Virginia\"\n          resolutionFunc(JSON.parse(xhr.responseText));\n        } else {\n          rejectionFunc(xhr.statusText, xhr);\n        }\n      }\n    }; // Call the response software component\n\n\n    const query = url + \"?zip=\" + zip;\n    xhr.open(\"GET\", query);\n    xhr.send(null);\n  });\n  zipPromise.then(thenCallback).catch(catchCallback);\n}\n\nfunction getPlaceFetch(url, zip, thenCallback, catchCallback) {\n  // Call the response software component\n  const query = url + \"?zip=\" + zip;\n  fetch(query).then( // Register the embedded handler function\n  // This function will be called when the server returns\n  // (the \"callback\" function)\n  // 4 means finished, and 200 means okay.\n  response => {\n    // Data should look like \"Fairfax, Virginia\"\n    response.json().then(thenCallback);\n  }).catch(catchCallback);\n}\n\nfunction getPlaceAxios(url, zip, thenCallback, catchCallback) {\n  // Call the response software component\n  const query = \"zip=\" + zip;\n  axios.post(url, query).then( // Register the embedded handler function\n  // This function will be called when the server returns\n  // (the \"callback\" function)\n  // 4 means finished, and 200 means okay.\n  response => {\n    // Data should look like \"Fairfax, Virginia\"\n    thenCallback(response.data);\n  }).catch(catchCallback);\n}\n\nfunction getPlace(url, zip, thenCallback, catchCallback, library = \"ajax\") {\n  if (!url) {\n    throw new Error('getPlace: URL is required');\n  }\n\n  let targetLibrary = null;\n\n  switch (library) {\n    case \"axios\":\n      targetLibrary = getPlaceAxios;\n      break;\n\n    case \"fetch\":\n      targetLibrary = getPlaceFetch;\n      break;\n\n    case \"promise\":\n      targetLibrary = getPlaceAjaxPromise;\n      break;\n\n    case \"ajax\":\n    default:\n      targetLibrary = getPlaceAjax;\n  }\n\n  targetLibrary(url, zip, thenCallback, catchCallback);\n}\n\nexport default getPlace;","map":{"version":3,"sources":["/Users/brendahenriquez/Desktop/swe432/swe432-heorku-react-app2021/src/core/popcorn.js"],"names":["axios","getPlaceAjax","url","zip","thenCallback","catchCallback","xhr","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","JSON","parse","responseText","statusText","query","open","send","getPlaceAjaxPromise","zipPromise","Promise","resolutionFunc","rejectionFunc","then","catch","getPlaceFetch","fetch","response","json","getPlaceAxios","post","data","getPlace","library","Error","targetLibrary"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// popcornA.js\n//  Ajax JavaScript code for the popcornA.html document\n//  Thanks to Sebesta, Programming the World Wide Web\n\n/********************************************************/\n// function getPlaceAjax\n//  parameter: zip\n//  parameter: success callback\n//  parameter: error callback (optional)\n//  parameter: url (optional)\n//  action: create the XMLHttpRequest object, register the\n//          handler for onreadystatechange, prepare to send\n//          the request (with open), and send the request,\n//          along with the zip code, to the server\n//  includes: the anonymous handler for onreadystatechange\n\nfunction getPlaceAjax(\n  url,\n  zip,\n  thenCallback,\n  catchCallback,\n) {\n  let xhr = null;\n  if (window.XMLHttpRequest) {\n    // IE7+, Firefox, Chrome, Opera, Safari\n    xhr = new XMLHttpRequest();\n  } else {\n    // IE5, IE6\n    // eslint-disable-next-line\n    xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n  }\n\n  // Register the embedded handler function\n  // This function will be called when the server returns\n  // (the \"callback\" function)\n  xhr.onreadystatechange = () => {\n    // 4 means finished,\n    if (xhr.readyState === 4) {\n      // and 200 means okay.\n      if (xhr.status === 200) {\n        // Data should look like \"Fairfax, Virginia\"\n        thenCallback(JSON.parse(xhr.responseText));\n      } else {\n        catchCallback(xhr.statusText, xhr);\n      }\n    }\n  };\n  // Call the response software component\n  const query = url + \"?zip=\" + zip;\n  xhr.open(\"GET\", query);\n  xhr.send(null);\n}\n\nfunction getPlaceAjaxPromise(\n  url,\n  zip,\n  thenCallback,\n  catchCallback,\n) {\n  const zipPromise = new Promise((resolutionFunc, rejectionFunc) => {\n    let xhr = null;\n    if (window.XMLHttpRequest) {\n      // IE7+, Firefox, Chrome, Opera, Safari\n      xhr = new XMLHttpRequest();\n    } else {\n      // IE5, IE6\n      // eslint-disable-next-line\n      xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n\n    // Register the embedded handler function\n    // This function will be called when the server returns\n    // (the \"callback\" function)\n    xhr.onreadystatechange = () => {\n      // 4 means finished,\n      if (xhr.readyState === 4) {\n        // and 200 means okay.\n        if (xhr.status === 200) {\n          // Data should look like \"Fairfax, Virginia\"\n          resolutionFunc(JSON.parse(xhr.responseText));\n        } else {\n          rejectionFunc(xhr.statusText, xhr);\n        }\n      }\n    };\n    // Call the response software component\n    const query = url + \"?zip=\" + zip;\n    xhr.open(\"GET\", query);\n    xhr.send(null);\n  });\n\n  zipPromise.then(thenCallback).catch(catchCallback);\n}\n\nfunction getPlaceFetch(\n  url,\n  zip,\n  thenCallback,\n  catchCallback,\n) {\n  // Call the response software component\n  const query = url + \"?zip=\" + zip;\n  fetch(query)\n    .then(\n      // Register the embedded handler function\n      // This function will be called when the server returns\n      // (the \"callback\" function)\n      // 4 means finished, and 200 means okay.\n      (response) => {\n        // Data should look like \"Fairfax, Virginia\"\n        response.json().then(thenCallback);\n      }\n    )\n    .catch(catchCallback);\n}\n\nfunction getPlaceAxios(\n  url,\n  zip,\n  thenCallback,\n  catchCallback,\n) {\n  // Call the response software component\n  const query = \"zip=\" + zip;\n  axios\n    .post(url, query)\n    .then(\n      // Register the embedded handler function\n      // This function will be called when the server returns\n      // (the \"callback\" function)\n      // 4 means finished, and 200 means okay.\n      (response) => {\n        // Data should look like \"Fairfax, Virginia\"\n        thenCallback(response.data);\n      }\n    )\n    .catch(catchCallback);\n}\n\nfunction getPlace(\n  url,\n  zip,\n  thenCallback,\n  catchCallback,\n  library = \"ajax\"\n) {\n  if(!url){\n    throw new Error('getPlace: URL is required');\n  }\n\n  let targetLibrary = null;\n  switch (library) {\n    case \"axios\":\n      targetLibrary = getPlaceAxios;\n      break;\n    case \"fetch\":\n      targetLibrary = getPlaceFetch;\n      break;\n    case \"promise\":\n      targetLibrary = getPlaceAjaxPromise;\n      break;\n    case \"ajax\":\n    default:\n      targetLibrary = getPlaceAjax;\n  }\n  targetLibrary(url, zip, thenCallback, catchCallback);\n}\n\nexport default getPlace;\n"]},"metadata":{},"sourceType":"module"}