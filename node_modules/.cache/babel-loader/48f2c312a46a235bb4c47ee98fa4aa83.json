{"ast":null,"code":"var _jsxFileName = \"/Users/brendahenriquez/Desktop/swe432/swe432-heorku-react-app2021/src/components/PopcornSales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\n/* eslint-disable react/react-in-jsx-scope -- Unaware of jsxImportSource */\n\n/** @jsxImportSource @emotion/react */\n\nimport { css } from '@emotion/react';\nimport getPlace from \"../core/popcorn\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nfunction numberOnly(value, fallbackValue) {\n  if (isNaN(value)) {\n    return fallbackValue;\n  } else {\n    return value;\n  }\n}\n\nfunction PopcornSales(props) {\n  _s();\n\n  const {\n    zipURL = \"https://swe432tomcat.herokuapp.com/zipLookup\",\n    library = \"fetch\"\n  } = props;\n  const [addressZip, setAddressZip] = useState(\"\");\n  const [addressState, setAddressState] = useState(\"\");\n  const [addressCity, setAddressCity] = useState(\"\");\n  const [zipError, setZipError] = useState(null); // gets the response text, splits it into city and state, and puts them in the document\n\n  const getPlaceSuccessCallback = useCallback(result => {\n    const {\n      city,\n      state\n    } = result;\n\n    if (state && city) {\n      setAddressState(state);\n      setAddressCity(city);\n    }\n  }, []); // handles request error\n\n  const getPlaceFailureCallback = useCallback(() => {\n    setZipError(\"ZIP service unavailable, please check your internet connection an try again.\");\n  }, []);\n  const handleAddressZipChange = useCallback(event => {\n    setAddressZip(currentAddressZip => {\n      const nextAddressZip = event.target.value;\n      return numberOnly(nextAddressZip, currentAddressZip);\n    });\n  }, []);\n  const handleAddressStateChange = useCallback(event => {\n    setAddressState(event.target.value);\n  }, []);\n  const handleAddressCityChange = useCallback(event => {\n    setAddressCity(event.target.value);\n  }, []);\n  const focusedElementRef = useRef();\n  useEffect(() => {// focusedElementRef.current.focus(); // commented in codesandbox for \"obvious\" reasons\n  }, []);\n  useEffect(() => {\n    setZipError(null);\n\n    if (addressZip.length > 4 && !addressState && !addressCity) {\n      getPlace(zipURL, addressZip, getPlaceSuccessCallback, getPlaceFailureCallback, library);\n    }\n  }, [zipURL, library, addressZip, getPlaceSuccessCallback, getPlaceFailureCallback, addressState, addressCity]);\n  return _jsxDEV(\"div\", {\n    css: css`\n      position: relative;\n    `,\n    children: [_jsxDEV(\"h2\", {\n      children: \"Welcome to SWE Popcorn Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), _jsxDEV(\"table\", {\n      children: [_jsxDEV(\"tr\", {\n        children: [_jsxDEV(\"td\", {\n          children: \" Buyer's name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), _jsxDEV(\"td\", {\n          children: _jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            size: \"30\",\n            ref: focusedElementRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), _jsxDEV(\"tr\", {\n        children: [_jsxDEV(\"td\", {\n          children: \" Street address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), _jsxDEV(\"td\", {\n          children: _jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"street\",\n            size: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), _jsxDEV(\"tr\", {\n        children: [_jsxDEV(\"td\", {\n          children: \" Zip code: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), _jsxDEV(\"td\", {\n          children: _jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"zip\",\n            size: \"10\",\n            value: addressZip,\n            onChange: handleAddressZipChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), _jsxDEV(\"tr\", {\n        children: [_jsxDEV(\"td\", {\n          children: \" City: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), _jsxDEV(\"td\", {\n          children: _jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            id: \"city\",\n            size: \"30\",\n            value: addressCity,\n            onChange: handleAddressCityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), _jsxDEV(\"tr\", {\n        children: [_jsxDEV(\"td\", {\n          children: \" State: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), _jsxDEV(\"td\", {\n          children: _jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"state\",\n            id: \"state\",\n            size: \"30\",\n            value: addressState,\n            onChange: handleAddressStateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), _jsxDEV(\"img\", {\n      src: \"https://www.cs.gmu.edu/~offutt/classes/432/examples/ajax/popcorn/popcorn.jpg\",\n      alt: \"popcorn\",\n      css: css`\n          position: absolute;\n          left: 400px;\n          top: 50px;\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), _jsxDEV(\"p\", {\n      children: [_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), _jsxDEV(\"input\", {\n        type: \"reset\",\n        value: \"Clear Order Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: zipError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopcornSales, \"p7N1cHz4p9ht2GBv5+o58PS3kUU=\");\n\n_c = PopcornSales;\nexport default PopcornSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopcornSales\");","map":{"version":3,"sources":["/Users/brendahenriquez/Desktop/swe432/swe432-heorku-react-app2021/src/components/PopcornSales.js"],"names":["React","useState","useCallback","useEffect","useRef","css","getPlace","numberOnly","value","fallbackValue","isNaN","PopcornSales","props","zipURL","library","addressZip","setAddressZip","addressState","setAddressState","addressCity","setAddressCity","zipError","setZipError","getPlaceSuccessCallback","result","city","state","getPlaceFailureCallback","handleAddressZipChange","event","currentAddressZip","nextAddressZip","target","handleAddressStateChange","handleAddressCityChange","focusedElementRef","length","color"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\n/* eslint-disable react/react-in-jsx-scope -- Unaware of jsxImportSource */\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport getPlace from \"../core/popcorn\";\n\nfunction numberOnly(value, fallbackValue) {\n  if (isNaN(value)) {\n    return fallbackValue;\n  } else {\n    return value;\n  }\n}\n\nfunction PopcornSales(props) {\n  const {\n    zipURL=\"https://swe432tomcat.herokuapp.com/zipLookup\",\n    library = \"fetch\",\n  } = props;\n  const [addressZip, setAddressZip] = useState(\"\");\n  const [addressState, setAddressState] = useState(\"\");\n  const [addressCity, setAddressCity] = useState(\"\");\n  const [zipError, setZipError] = useState(null);\n\n  // gets the response text, splits it into city and state, and puts them in the document\n  const getPlaceSuccessCallback = useCallback((result) => {\n    const { city, state } = result;\n    if (state && city) {\n      setAddressState(state);\n      setAddressCity(city);\n    }\n  }, []);\n\n  // handles request error\n  const getPlaceFailureCallback = useCallback(() => {\n    setZipError(\n      \"ZIP service unavailable, please check your internet connection an try again.\"\n    );\n  }, []);\n\n  const handleAddressZipChange = useCallback((event) => {\n    setAddressZip((currentAddressZip) => {\n      const nextAddressZip = event.target.value;\n      return numberOnly(nextAddressZip, currentAddressZip);\n    });\n  }, []);\n\n  const handleAddressStateChange = useCallback((event) => {\n    setAddressState(event.target.value);\n  }, []);\n\n  const handleAddressCityChange = useCallback((event) => {\n    setAddressCity(event.target.value);\n  }, []);\n\n  const focusedElementRef = useRef();\n  useEffect(() => {\n    // focusedElementRef.current.focus(); // commented in codesandbox for \"obvious\" reasons\n  }, []);\n\n  useEffect(() => {\n    setZipError(null);\n    if (addressZip.length > 4 && !addressState && !addressCity) {\n      getPlace(zipURL, addressZip, getPlaceSuccessCallback, getPlaceFailureCallback, library);\n    }\n  }, [\n    zipURL,\n    library,\n    addressZip,\n    getPlaceSuccessCallback,\n    getPlaceFailureCallback,\n    addressState,\n    addressCity\n  ]);\n\n  return (\n    <div css={css`\n      position: relative;\n    `}>\n      <h2>Welcome to SWE Popcorn Sales</h2>\n      {/* <form action=\"\" name=\"addressForm\"> */}\n      {/* <!-- A borderless table of text widgets for name and address --> */}\n      <table>\n        <tr>\n          <td> Buyer's name: </td>\n          <td>\n            <input type=\"text\" name=\"name\" size=\"30\" ref={focusedElementRef} />\n          </td>\n        </tr>\n        <tr>\n          <td> Street address: </td>\n          <td>\n            <input type=\"text\" name=\"street\" size=\"30\" />\n          </td>\n        </tr>\n        <tr>\n          <td> Zip code: </td>\n          {/* <!-- Call JS function getPlace() when zip code box is changed --> */}\n          <td>\n            <input\n              type=\"text\"\n              name=\"zip\"\n              size=\"10\"\n              value={addressZip}\n              onChange={handleAddressZipChange}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td> City: </td>\n          <td>\n            <input\n              type=\"text\"\n              name=\"city\"\n              id=\"city\"\n              size=\"30\"\n              value={addressCity}\n              onChange={handleAddressCityChange}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td> State: </td>\n          <td>\n            <input\n              type=\"text\"\n              name=\"state\"\n              id=\"state\"\n              size=\"30\"\n              value={addressState}\n              onChange={handleAddressStateChange}\n            />\n          </td>\n        </tr>\n      </table>\n\n      <img\n        src=\"https://www.cs.gmu.edu/~offutt/classes/432/examples/ajax/popcorn/popcorn.jpg\"\n        alt=\"popcorn\"\n        css={css`\n          position: absolute;\n          left: 400px;\n          top: 50px;\n        `}\n      />\n\n      {/* <!-- The submit and reset buttons --> */}\n      <p>\n        <input type=\"submit\" value=\"Submit Order\" />\n        <input type=\"reset\" value=\"Clear Order Form\" />\n      </p>\n      {/* </form> */}\n      <div style={{ color: \"red\" }}>{zipError}</div>\n    </div>\n  );\n}\n\nexport default PopcornSales;\n"]},"metadata":{},"sourceType":"module"}